library(tidyverse)
library(ggplot2)
library(ggthemes)

# making rnorms into dataframes that can be bound together for ggplot
sp1 <- data.frame(value = rnorm(100000,mean = 53, sd = 25),
                  species="a")
sp2 <- data.frame(value = rnorm(100000, mean = 82, sd = 25),
                  species="b")
sp3 <- data.frame(value = rnorm(100000, mean = 275, sd = 25),
                  species="c")
sp4 <- data.frame(value = rnorm(100000, mean = 240, sd = 25),
                  species="d")
sp5 <- data.frame(value = rnorm(100000, mean = 310, sd = 25),
                  species="e")

# making the concept plot with ggplot()
sp_combined <- rbind(sp1,sp2,sp3,sp4,sp5)

jornada_abund_plot <- sp_combined %>%
  ggplot(aes(x=value,colour=species))+
  geom_density(linewidth=1)+
  theme_few()+
  labs(x = "Time (days)",
       y = "Abundance") +
  theme(axis.title = element_text(size = 12,face = "bold",),
        legend.title = element_text(size = 12, face = "bold"),
        legend.text = element_text(size = 10)) +
  xlim(0,365) +
  ylim(0,0.02) +
  scale_colour_manual(values = c("a" = "#E69F00",
                                 "b" = "#56B4E9",
                                 "c" = "#CC79A7",
                                 "d" = "#009E73",
                                 "e" = "#F0E442"),
                      breaks = c("a","b","c","d","e"))+
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank())
jornada_abund_plot
ggsave("plots/jornada_concept_abundance.png",plot=jornada_abund_plot,scale=1,dpi=600)

############################################################################################################################
# One pulse plots
# making a big rnorm distribution centered around ~20 with a large sd
pulse_initial <- data.frame(value = rnorm(100000, mean = 20, sd = 75))

pulse_i_plot <- pulse_initial %>%
  ggplot(aes(x = value)) +
  geom_density(linewidth = 1)+
  theme_few()+
  labs(y = "Resource quantity",
       x = "Time (days)") +
  theme(axis.title = element_text(size = 12,face = "bold",),
        legend.title = element_text(size = 12, face = "bold"),
        legend.text = element_text(size = 10)) +
  geom_vline(xintercept = 20, linewidth = 1,colour = "red", linetype = "twodash")+
  xlim(0,365)+
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank())
pulse_i_plot
ggsave("plots/one_pulse_concept.png",plot=pulse_i_plot,scale=1,dpi=600)

# making the responses per species
pulse_sp1 <- data.frame(value = rnorm(1000000, mean = 106, sd = 24),
                        species = "a")
pulse_sp2 <- data.frame(value = rnorm(1000000, mean = 135, sd = 20),
                        species = "b")
pulse_sp3 <- data.frame(value = rnorm(1000000, mean = 277, sd = 25),
                        species = "c")
pulse_sp4 <- data.frame(value = rnorm(1000000, mean = 199, sd = 38),
                        species = "d")
pulse_sp5 <- data.frame(value = rnorm(1000000, mean = 238, sd = 75),
                        species = "e")

response_combined <- rbind(pulse_sp1,pulse_sp2,pulse_sp3,pulse_sp4,pulse_sp5)

one_pulse_response_plot <- response_combined %>%
  ggplot(aes(x=value,colour=species))+
  geom_density(linewidth=1)+
  theme_few()+
  labs(x = "Time (days)",
       y = "Abundance") +
  theme(axis.title = element_text(size = 12,face = "bold",),
        legend.title = element_text(size = 12, face = "bold"),
        legend.text = element_text(size = 10)) +
  xlim(0,100) +
  ylim(0,0.01) +
  scale_colour_manual(values = c("a" = "#E69F00",
                                 "b" = "#56B4E9",
                                 "c" = "#CC79A7",
                                 "d" = "#009E73",
                                 "e" = "#F0E442"),
                      breaks = c("a","b","c","d","e"))+
  geom_vline(xintercept = 20,linewidth = 1,colour = "red", linetype = "twodash")+
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank())
one_pulse_response_plot
ggsave("plots/one_pulse_response_plot.png",plot=one_pulse_response_plot,scale=1,dpi=600)

############################################################################################################################
# Chemostat and no pulse response

chemostat_plot <- ggplot()+
  geom_abline(slope = 0,
              intercept = 20,
              linewidth = 1) +
  geom_abline(slope = 0,
              intercept = 35,
              linewidth = 1,
              linetype = "dotdash") +
  labs(x = "Time (days)",
       y = "Resource quantity") +
  xlim(0,365) +
  ylim(0, 50) +
  theme_few() +
  theme(axis.title = element_text(size = 12,face = "bold",),
        legend.title = element_text(size = 12, face = "bold"),
        legend.text = element_text(size = 10)) +
 theme(axis.text.y = element_blank(),
       axis.ticks.y = element_blank())
chemostat_plot
ggsave("plots/chemostat_plot.png",plot=chemostat_plot,scale=1,dpi=600)

# logistic curve? Will try doing rnorm into cumulative frequency
chemo_sp1 <- data.frame(values = rnorm(10000, mean = 150, sd = 30),
                           species = "a")
chemo_sp2 <- data.frame(values = rnorm(10000, mean = 80, sd = 30),
                           species = "b")

chemostat_combined <- rbind(chemo_sp1,chemo_sp2)

chemostat_response_concept <- chemostat_combined %>%
  ggplot(aes(x = values,
             colour = species)) +
  stat_ecdf(linewidth = 1)+
  xlim(0,365) +
  ylim(0, 1.25) +
  theme_few() +
  theme(axis.title = element_text(size = 12,face = "bold",),
        legend.title = element_text(size = 12, face = "bold"),
        legend.text = element_text(size = 10)) +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank())
chemostat_response_concept

# This doesn't work because both species terminate at the same end value
# find a new way to make logistic curves


